#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataLayer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DataSource")]
	public partial class DataClassesRepairsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertACT_DICT(ACT_DICT instance);
    partial void UpdateACT_DICT(ACT_DICT instance);
    partial void DeleteACT_DICT(ACT_DICT instance);
    partial void InsertACTIVITY(ACTIVITY instance);
    partial void UpdateACTIVITY(ACTIVITY instance);
    partial void DeleteACTIVITY(ACTIVITY instance);
    partial void InsertCLIENT(CLIENT instance);
    partial void UpdateCLIENT(CLIENT instance);
    partial void DeleteCLIENT(CLIENT instance);
    partial void InsertOBJ_TYPE(OBJ_TYPE instance);
    partial void UpdateOBJ_TYPE(OBJ_TYPE instance);
    partial void DeleteOBJ_TYPE(OBJ_TYPE instance);
    partial void InsertOBJECT(OBJECT instance);
    partial void UpdateOBJECT(OBJECT instance);
    partial void DeleteOBJECT(OBJECT instance);
    partial void InsertPERSONEL(PERSONEL instance);
    partial void UpdatePERSONEL(PERSONEL instance);
    partial void DeletePERSONEL(PERSONEL instance);
    partial void InsertREQUEST(REQUEST instance);
    partial void UpdateREQUEST(REQUEST instance);
    partial void DeleteREQUEST(REQUEST instance);
    #endregion
		
		public DataClassesRepairsDataContext() : 
				base(global::DataLayer.Properties.Settings.Default.DataSourceConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesRepairsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesRepairsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesRepairsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesRepairsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ACT_DICT> ACT_DICTs
		{
			get
			{
				return this.GetTable<ACT_DICT>();
			}
		}
		
		public System.Data.Linq.Table<ACTIVITY> ACTIVITies
		{
			get
			{
				return this.GetTable<ACTIVITY>();
			}
		}
		
		public System.Data.Linq.Table<CLIENT> CLIENTs
		{
			get
			{
				return this.GetTable<CLIENT>();
			}
		}
		
		public System.Data.Linq.Table<OBJ_TYPE> OBJ_TYPEs
		{
			get
			{
				return this.GetTable<OBJ_TYPE>();
			}
		}
		
		public System.Data.Linq.Table<OBJECT> OBJECTs
		{
			get
			{
				return this.GetTable<OBJECT>();
			}
		}
		
		public System.Data.Linq.Table<PERSONEL> PERSONELs
		{
			get
			{
				return this.GetTable<PERSONEL>();
			}
		}
		
		public System.Data.Linq.Table<REQUEST> REQUESTs
		{
			get
			{
				return this.GetTable<REQUEST>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ACT_DICT")]
	public partial class ACT_DICT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _act_type;
		
		private string _act_name;
		
		private EntitySet<ACTIVITY> _ACTIVITies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onact_typeChanging(int value);
    partial void Onact_typeChanged();
    partial void Onact_nameChanging(string value);
    partial void Onact_nameChanged();
    #endregion
		
		public ACT_DICT()
		{
			this._ACTIVITies = new EntitySet<ACTIVITY>(new Action<ACTIVITY>(this.attach_ACTIVITies), new Action<ACTIVITY>(this.detach_ACTIVITies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_act_type", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int act_type
		{
			get
			{
				return this._act_type;
			}
			set
			{
				if ((this._act_type != value))
				{
					this.Onact_typeChanging(value);
					this.SendPropertyChanging();
					this._act_type = value;
					this.SendPropertyChanged("act_type");
					this.Onact_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_act_name", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string act_name
		{
			get
			{
				return this._act_name;
			}
			set
			{
				if ((this._act_name != value))
				{
					this.Onact_nameChanging(value);
					this.SendPropertyChanging();
					this._act_name = value;
					this.SendPropertyChanged("act_name");
					this.Onact_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ACT_DICT_ACTIVITY", Storage="_ACTIVITies", ThisKey="act_type", OtherKey="act_type")]
		public EntitySet<ACTIVITY> ACTIVITies
		{
			get
			{
				return this._ACTIVITies;
			}
			set
			{
				this._ACTIVITies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ACTIVITies(ACTIVITY entity)
		{
			this.SendPropertyChanging();
			entity.ACT_DICT = this;
		}
		
		private void detach_ACTIVITies(ACTIVITY entity)
		{
			this.SendPropertyChanging();
			entity.ACT_DICT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ACTIVITY")]
	public partial class ACTIVITY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_act;
		
		private int _id_req;
		
		private int _act_type;
		
		private System.Nullable<int> _id_pers;
		
		private int _seq_no;
		
		private string _descr;
		
		private string _result;
		
		private string _status;
		
		private string _alt_req;
		
		private string _alt_fin_cancel;
		
		private EntityRef<ACT_DICT> _ACT_DICT;
		
		private EntityRef<PERSONEL> _PERSONEL;
		
		private EntityRef<REQUEST> _REQUEST;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_actChanging(int value);
    partial void Onid_actChanged();
    partial void Onid_reqChanging(int value);
    partial void Onid_reqChanged();
    partial void Onact_typeChanging(int value);
    partial void Onact_typeChanged();
    partial void Onid_persChanging(System.Nullable<int> value);
    partial void Onid_persChanged();
    partial void Onseq_noChanging(int value);
    partial void Onseq_noChanged();
    partial void OndescrChanging(string value);
    partial void OndescrChanged();
    partial void OnresultChanging(string value);
    partial void OnresultChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void Onalt_reqChanging(string value);
    partial void Onalt_reqChanged();
    partial void Onalt_fin_cancelChanging(string value);
    partial void Onalt_fin_cancelChanged();
    #endregion
		
		public ACTIVITY()
		{
			this._ACT_DICT = default(EntityRef<ACT_DICT>);
			this._PERSONEL = default(EntityRef<PERSONEL>);
			this._REQUEST = default(EntityRef<REQUEST>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_act", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_act
		{
			get
			{
				return this._id_act;
			}
			set
			{
				if ((this._id_act != value))
				{
					this.Onid_actChanging(value);
					this.SendPropertyChanging();
					this._id_act = value;
					this.SendPropertyChanged("id_act");
					this.Onid_actChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_req", DbType="Int NOT NULL")]
		public int id_req
		{
			get
			{
				return this._id_req;
			}
			set
			{
				if ((this._id_req != value))
				{
					if (this._REQUEST.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_reqChanging(value);
					this.SendPropertyChanging();
					this._id_req = value;
					this.SendPropertyChanged("id_req");
					this.Onid_reqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_act_type", DbType="Int NOT NULL")]
		public int act_type
		{
			get
			{
				return this._act_type;
			}
			set
			{
				if ((this._act_type != value))
				{
					if (this._ACT_DICT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onact_typeChanging(value);
					this.SendPropertyChanging();
					this._act_type = value;
					this.SendPropertyChanged("act_type");
					this.Onact_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_pers", DbType="Int")]
		public System.Nullable<int> id_pers
		{
			get
			{
				return this._id_pers;
			}
			set
			{
				if ((this._id_pers != value))
				{
					if (this._PERSONEL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_persChanging(value);
					this.SendPropertyChanging();
					this._id_pers = value;
					this.SendPropertyChanged("id_pers");
					this.Onid_persChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seq_no", DbType="Int NOT NULL")]
		public int seq_no
		{
			get
			{
				return this._seq_no;
			}
			set
			{
				if ((this._seq_no != value))
				{
					this.Onseq_noChanging(value);
					this.SendPropertyChanging();
					this._seq_no = value;
					this.SendPropertyChanged("seq_no");
					this.Onseq_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descr", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string descr
		{
			get
			{
				return this._descr;
			}
			set
			{
				if ((this._descr != value))
				{
					this.OndescrChanging(value);
					this.SendPropertyChanging();
					this._descr = value;
					this.SendPropertyChanged("descr");
					this.OndescrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_result", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string result
		{
			get
			{
				return this._result;
			}
			set
			{
				if ((this._result != value))
				{
					this.OnresultChanging(value);
					this.SendPropertyChanging();
					this._result = value;
					this.SendPropertyChanged("result");
					this.OnresultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_alt_req", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string alt_req
		{
			get
			{
				return this._alt_req;
			}
			set
			{
				if ((this._alt_req != value))
				{
					this.Onalt_reqChanging(value);
					this.SendPropertyChanging();
					this._alt_req = value;
					this.SendPropertyChanged("alt_req");
					this.Onalt_reqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_alt_fin_cancel", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string alt_fin_cancel
		{
			get
			{
				return this._alt_fin_cancel;
			}
			set
			{
				if ((this._alt_fin_cancel != value))
				{
					this.Onalt_fin_cancelChanging(value);
					this.SendPropertyChanging();
					this._alt_fin_cancel = value;
					this.SendPropertyChanged("alt_fin_cancel");
					this.Onalt_fin_cancelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ACT_DICT_ACTIVITY", Storage="_ACT_DICT", ThisKey="act_type", OtherKey="act_type", IsForeignKey=true)]
		public ACT_DICT ACT_DICT
		{
			get
			{
				return this._ACT_DICT.Entity;
			}
			set
			{
				ACT_DICT previousValue = this._ACT_DICT.Entity;
				if (((previousValue != value) 
							|| (this._ACT_DICT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ACT_DICT.Entity = null;
						previousValue.ACTIVITies.Remove(this);
					}
					this._ACT_DICT.Entity = value;
					if ((value != null))
					{
						value.ACTIVITies.Add(this);
						this._act_type = value.act_type;
					}
					else
					{
						this._act_type = default(int);
					}
					this.SendPropertyChanged("ACT_DICT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSONEL_ACTIVITY", Storage="_PERSONEL", ThisKey="id_pers", OtherKey="id_pers", IsForeignKey=true)]
		public PERSONEL PERSONEL
		{
			get
			{
				return this._PERSONEL.Entity;
			}
			set
			{
				PERSONEL previousValue = this._PERSONEL.Entity;
				if (((previousValue != value) 
							|| (this._PERSONEL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PERSONEL.Entity = null;
						previousValue.ACTIVITies.Remove(this);
					}
					this._PERSONEL.Entity = value;
					if ((value != null))
					{
						value.ACTIVITies.Add(this);
						this._id_pers = value.id_pers;
					}
					else
					{
						this._id_pers = default(Nullable<int>);
					}
					this.SendPropertyChanged("PERSONEL");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="REQUEST_ACTIVITY", Storage="_REQUEST", ThisKey="id_req", OtherKey="id_req", IsForeignKey=true)]
		public REQUEST REQUEST
		{
			get
			{
				return this._REQUEST.Entity;
			}
			set
			{
				REQUEST previousValue = this._REQUEST.Entity;
				if (((previousValue != value) 
							|| (this._REQUEST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._REQUEST.Entity = null;
						previousValue.ACTIVITies.Remove(this);
					}
					this._REQUEST.Entity = value;
					if ((value != null))
					{
						value.ACTIVITies.Add(this);
						this._id_req = value.id_req;
					}
					else
					{
						this._id_req = default(int);
					}
					this.SendPropertyChanged("REQUEST");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CLIENT")]
	public partial class CLIENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_cli;
		
		private string _name;
		
		private string _fname;
		
		private string _lname;
		
		private string _telephone;
		
		private EntitySet<OBJECT> _OBJECTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_cliChanging(int value);
    partial void Onid_cliChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnfnameChanging(string value);
    partial void OnfnameChanged();
    partial void OnlnameChanging(string value);
    partial void OnlnameChanged();
    partial void OntelephoneChanging(string value);
    partial void OntelephoneChanged();
    #endregion
		
		public CLIENT()
		{
			this._OBJECTs = new EntitySet<OBJECT>(new Action<OBJECT>(this.attach_OBJECTs), new Action<OBJECT>(this.detach_OBJECTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_cli", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_cli
		{
			get
			{
				return this._id_cli;
			}
			set
			{
				if ((this._id_cli != value))
				{
					this.Onid_cliChanging(value);
					this.SendPropertyChanging();
					this._id_cli = value;
					this.SendPropertyChanged("id_cli");
					this.Onid_cliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fname", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string fname
		{
			get
			{
				return this._fname;
			}
			set
			{
				if ((this._fname != value))
				{
					this.OnfnameChanging(value);
					this.SendPropertyChanging();
					this._fname = value;
					this.SendPropertyChanged("fname");
					this.OnfnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lname", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string lname
		{
			get
			{
				return this._lname;
			}
			set
			{
				if ((this._lname != value))
				{
					this.OnlnameChanging(value);
					this.SendPropertyChanging();
					this._lname = value;
					this.SendPropertyChanged("lname");
					this.OnlnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telephone", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string telephone
		{
			get
			{
				return this._telephone;
			}
			set
			{
				if ((this._telephone != value))
				{
					this.OntelephoneChanging(value);
					this.SendPropertyChanging();
					this._telephone = value;
					this.SendPropertyChanged("telephone");
					this.OntelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLIENT_OBJECT", Storage="_OBJECTs", ThisKey="id_cli", OtherKey="id_cli")]
		public EntitySet<OBJECT> OBJECTs
		{
			get
			{
				return this._OBJECTs;
			}
			set
			{
				this._OBJECTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OBJECTs(OBJECT entity)
		{
			this.SendPropertyChanging();
			entity.CLIENT = this;
		}
		
		private void detach_OBJECTs(OBJECT entity)
		{
			this.SendPropertyChanging();
			entity.CLIENT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OBJ_TYPE")]
	public partial class OBJ_TYPE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _code_type;
		
		private string _name_type;
		
		private EntitySet<OBJECT> _OBJECTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncode_typeChanging(int value);
    partial void Oncode_typeChanged();
    partial void Onname_typeChanging(string value);
    partial void Onname_typeChanged();
    #endregion
		
		public OBJ_TYPE()
		{
			this._OBJECTs = new EntitySet<OBJECT>(new Action<OBJECT>(this.attach_OBJECTs), new Action<OBJECT>(this.detach_OBJECTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code_type", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int code_type
		{
			get
			{
				return this._code_type;
			}
			set
			{
				if ((this._code_type != value))
				{
					this.Oncode_typeChanging(value);
					this.SendPropertyChanging();
					this._code_type = value;
					this.SendPropertyChanged("code_type");
					this.Oncode_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name_type
		{
			get
			{
				return this._name_type;
			}
			set
			{
				if ((this._name_type != value))
				{
					this.Onname_typeChanging(value);
					this.SendPropertyChanging();
					this._name_type = value;
					this.SendPropertyChanged("name_type");
					this.Onname_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJ_TYPE_OBJECT", Storage="_OBJECTs", ThisKey="code_type", OtherKey="code_type")]
		public EntitySet<OBJECT> OBJECTs
		{
			get
			{
				return this._OBJECTs;
			}
			set
			{
				this._OBJECTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OBJECTs(OBJECT entity)
		{
			this.SendPropertyChanging();
			entity.OBJ_TYPE = this;
		}
		
		private void detach_OBJECTs(OBJECT entity)
		{
			this.SendPropertyChanging();
			entity.OBJ_TYPE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OBJECT")]
	public partial class OBJECT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _nr_obj;
		
		private string _name;
		
		private int _id_cli;
		
		private int _code_type;
		
		private EntitySet<REQUEST> _REQUESTs;
		
		private EntityRef<CLIENT> _CLIENT;
		
		private EntityRef<OBJ_TYPE> _OBJ_TYPE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onnr_objChanging(int value);
    partial void Onnr_objChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onid_cliChanging(int value);
    partial void Onid_cliChanged();
    partial void Oncode_typeChanging(int value);
    partial void Oncode_typeChanged();
    #endregion
		
		public OBJECT()
		{
			this._REQUESTs = new EntitySet<REQUEST>(new Action<REQUEST>(this.attach_REQUESTs), new Action<REQUEST>(this.detach_REQUESTs));
			this._CLIENT = default(EntityRef<CLIENT>);
			this._OBJ_TYPE = default(EntityRef<OBJ_TYPE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nr_obj", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int nr_obj
		{
			get
			{
				return this._nr_obj;
			}
			set
			{
				if ((this._nr_obj != value))
				{
					this.Onnr_objChanging(value);
					this.SendPropertyChanging();
					this._nr_obj = value;
					this.SendPropertyChanged("nr_obj");
					this.Onnr_objChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_cli", DbType="Int NOT NULL")]
		public int id_cli
		{
			get
			{
				return this._id_cli;
			}
			set
			{
				if ((this._id_cli != value))
				{
					if (this._CLIENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_cliChanging(value);
					this.SendPropertyChanging();
					this._id_cli = value;
					this.SendPropertyChanged("id_cli");
					this.Onid_cliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code_type", DbType="Int NOT NULL")]
		public int code_type
		{
			get
			{
				return this._code_type;
			}
			set
			{
				if ((this._code_type != value))
				{
					if (this._OBJ_TYPE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncode_typeChanging(value);
					this.SendPropertyChanging();
					this._code_type = value;
					this.SendPropertyChanged("code_type");
					this.Oncode_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECT_REQUEST", Storage="_REQUESTs", ThisKey="nr_obj", OtherKey="nr_obj")]
		public EntitySet<REQUEST> REQUESTs
		{
			get
			{
				return this._REQUESTs;
			}
			set
			{
				this._REQUESTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLIENT_OBJECT", Storage="_CLIENT", ThisKey="id_cli", OtherKey="id_cli", IsForeignKey=true)]
		public CLIENT CLIENT
		{
			get
			{
				return this._CLIENT.Entity;
			}
			set
			{
				CLIENT previousValue = this._CLIENT.Entity;
				if (((previousValue != value) 
							|| (this._CLIENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CLIENT.Entity = null;
						previousValue.OBJECTs.Remove(this);
					}
					this._CLIENT.Entity = value;
					if ((value != null))
					{
						value.OBJECTs.Add(this);
						this._id_cli = value.id_cli;
					}
					else
					{
						this._id_cli = default(int);
					}
					this.SendPropertyChanged("CLIENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJ_TYPE_OBJECT", Storage="_OBJ_TYPE", ThisKey="code_type", OtherKey="code_type", IsForeignKey=true)]
		public OBJ_TYPE OBJ_TYPE
		{
			get
			{
				return this._OBJ_TYPE.Entity;
			}
			set
			{
				OBJ_TYPE previousValue = this._OBJ_TYPE.Entity;
				if (((previousValue != value) 
							|| (this._OBJ_TYPE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJ_TYPE.Entity = null;
						previousValue.OBJECTs.Remove(this);
					}
					this._OBJ_TYPE.Entity = value;
					if ((value != null))
					{
						value.OBJECTs.Add(this);
						this._code_type = value.code_type;
					}
					else
					{
						this._code_type = default(int);
					}
					this.SendPropertyChanged("OBJ_TYPE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_REQUESTs(REQUEST entity)
		{
			this.SendPropertyChanging();
			entity.OBJECT = this;
		}
		
		private void detach_REQUESTs(REQUEST entity)
		{
			this.SendPropertyChanging();
			entity.OBJECT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PERSONEL")]
	public partial class PERSONEL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_pers;
		
		private string _fname;
		
		private string _lname;
		
		private string _role;
		
		private string _login;
		
		private string _password;
		
		private EntitySet<ACTIVITY> _ACTIVITies;
		
		private EntitySet<REQUEST> _REQUESTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_persChanging(int value);
    partial void Onid_persChanged();
    partial void OnfnameChanging(string value);
    partial void OnfnameChanged();
    partial void OnlnameChanging(string value);
    partial void OnlnameChanged();
    partial void OnroleChanging(string value);
    partial void OnroleChanged();
    partial void OnloginChanging(string value);
    partial void OnloginChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    #endregion
		
		public PERSONEL()
		{
			this._ACTIVITies = new EntitySet<ACTIVITY>(new Action<ACTIVITY>(this.attach_ACTIVITies), new Action<ACTIVITY>(this.detach_ACTIVITies));
			this._REQUESTs = new EntitySet<REQUEST>(new Action<REQUEST>(this.attach_REQUESTs), new Action<REQUEST>(this.detach_REQUESTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_pers", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_pers
		{
			get
			{
				return this._id_pers;
			}
			set
			{
				if ((this._id_pers != value))
				{
					this.Onid_persChanging(value);
					this.SendPropertyChanging();
					this._id_pers = value;
					this.SendPropertyChanged("id_pers");
					this.Onid_persChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string fname
		{
			get
			{
				return this._fname;
			}
			set
			{
				if ((this._fname != value))
				{
					this.OnfnameChanging(value);
					this.SendPropertyChanging();
					this._fname = value;
					this.SendPropertyChanged("fname");
					this.OnfnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string lname
		{
			get
			{
				return this._lname;
			}
			set
			{
				if ((this._lname != value))
				{
					this.OnlnameChanging(value);
					this.SendPropertyChanging();
					this._lname = value;
					this.SendPropertyChanged("lname");
					this.OnlnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string role
		{
			get
			{
				return this._role;
			}
			set
			{
				if ((this._role != value))
				{
					this.OnroleChanging(value);
					this.SendPropertyChanging();
					this._role = value;
					this.SendPropertyChanged("role");
					this.OnroleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string login
		{
			get
			{
				return this._login;
			}
			set
			{
				if ((this._login != value))
				{
					this.OnloginChanging(value);
					this.SendPropertyChanging();
					this._login = value;
					this.SendPropertyChanged("login");
					this.OnloginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSONEL_ACTIVITY", Storage="_ACTIVITies", ThisKey="id_pers", OtherKey="id_pers")]
		public EntitySet<ACTIVITY> ACTIVITies
		{
			get
			{
				return this._ACTIVITies;
			}
			set
			{
				this._ACTIVITies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSONEL_REQUEST", Storage="_REQUESTs", ThisKey="id_pers", OtherKey="id_pers")]
		public EntitySet<REQUEST> REQUESTs
		{
			get
			{
				return this._REQUESTs;
			}
			set
			{
				this._REQUESTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ACTIVITies(ACTIVITY entity)
		{
			this.SendPropertyChanging();
			entity.PERSONEL = this;
		}
		
		private void detach_ACTIVITies(ACTIVITY entity)
		{
			this.SendPropertyChanging();
			entity.PERSONEL = null;
		}
		
		private void attach_REQUESTs(REQUEST entity)
		{
			this.SendPropertyChanging();
			entity.PERSONEL = this;
		}
		
		private void detach_REQUESTs(REQUEST entity)
		{
			this.SendPropertyChanging();
			entity.PERSONEL = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.REQUEST")]
	public partial class REQUEST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_req;
		
		private int _nr_obj;
		
		private int _id_pers;
		
		private string _descr;
		
		private string _result;
		
		private string _status;
		
		private string _alt_req;
		
		private string _alt_fin_cancel;
		
		private EntitySet<ACTIVITY> _ACTIVITies;
		
		private EntityRef<OBJECT> _OBJECT;
		
		private EntityRef<PERSONEL> _PERSONEL;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_reqChanging(int value);
    partial void Onid_reqChanged();
    partial void Onnr_objChanging(int value);
    partial void Onnr_objChanged();
    partial void Onid_persChanging(int value);
    partial void Onid_persChanged();
    partial void OndescrChanging(string value);
    partial void OndescrChanged();
    partial void OnresultChanging(string value);
    partial void OnresultChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void Onalt_reqChanging(string value);
    partial void Onalt_reqChanged();
    partial void Onalt_fin_cancelChanging(string value);
    partial void Onalt_fin_cancelChanged();
    #endregion
		
		public REQUEST()
		{
			this._ACTIVITies = new EntitySet<ACTIVITY>(new Action<ACTIVITY>(this.attach_ACTIVITies), new Action<ACTIVITY>(this.detach_ACTIVITies));
			this._OBJECT = default(EntityRef<OBJECT>);
			this._PERSONEL = default(EntityRef<PERSONEL>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_req", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_req
		{
			get
			{
				return this._id_req;
			}
			set
			{
				if ((this._id_req != value))
				{
					this.Onid_reqChanging(value);
					this.SendPropertyChanging();
					this._id_req = value;
					this.SendPropertyChanged("id_req");
					this.Onid_reqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nr_obj", DbType="Int NOT NULL")]
		public int nr_obj
		{
			get
			{
				return this._nr_obj;
			}
			set
			{
				if ((this._nr_obj != value))
				{
					if (this._OBJECT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onnr_objChanging(value);
					this.SendPropertyChanging();
					this._nr_obj = value;
					this.SendPropertyChanged("nr_obj");
					this.Onnr_objChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_pers", DbType="Int NOT NULL")]
		public int id_pers
		{
			get
			{
				return this._id_pers;
			}
			set
			{
				if ((this._id_pers != value))
				{
					if (this._PERSONEL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_persChanging(value);
					this.SendPropertyChanging();
					this._id_pers = value;
					this.SendPropertyChanged("id_pers");
					this.Onid_persChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descr", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string descr
		{
			get
			{
				return this._descr;
			}
			set
			{
				if ((this._descr != value))
				{
					this.OndescrChanging(value);
					this.SendPropertyChanging();
					this._descr = value;
					this.SendPropertyChanged("descr");
					this.OndescrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_result", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string result
		{
			get
			{
				return this._result;
			}
			set
			{
				if ((this._result != value))
				{
					this.OnresultChanging(value);
					this.SendPropertyChanging();
					this._result = value;
					this.SendPropertyChanged("result");
					this.OnresultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_alt_req", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string alt_req
		{
			get
			{
				return this._alt_req;
			}
			set
			{
				if ((this._alt_req != value))
				{
					this.Onalt_reqChanging(value);
					this.SendPropertyChanging();
					this._alt_req = value;
					this.SendPropertyChanged("alt_req");
					this.Onalt_reqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_alt_fin_cancel", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string alt_fin_cancel
		{
			get
			{
				return this._alt_fin_cancel;
			}
			set
			{
				if ((this._alt_fin_cancel != value))
				{
					this.Onalt_fin_cancelChanging(value);
					this.SendPropertyChanging();
					this._alt_fin_cancel = value;
					this.SendPropertyChanged("alt_fin_cancel");
					this.Onalt_fin_cancelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="REQUEST_ACTIVITY", Storage="_ACTIVITies", ThisKey="id_req", OtherKey="id_req")]
		public EntitySet<ACTIVITY> ACTIVITies
		{
			get
			{
				return this._ACTIVITies;
			}
			set
			{
				this._ACTIVITies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECT_REQUEST", Storage="_OBJECT", ThisKey="nr_obj", OtherKey="nr_obj", IsForeignKey=true)]
		public OBJECT OBJECT
		{
			get
			{
				return this._OBJECT.Entity;
			}
			set
			{
				OBJECT previousValue = this._OBJECT.Entity;
				if (((previousValue != value) 
							|| (this._OBJECT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECT.Entity = null;
						previousValue.REQUESTs.Remove(this);
					}
					this._OBJECT.Entity = value;
					if ((value != null))
					{
						value.REQUESTs.Add(this);
						this._nr_obj = value.nr_obj;
					}
					else
					{
						this._nr_obj = default(int);
					}
					this.SendPropertyChanged("OBJECT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSONEL_REQUEST", Storage="_PERSONEL", ThisKey="id_pers", OtherKey="id_pers", IsForeignKey=true)]
		public PERSONEL PERSONEL
		{
			get
			{
				return this._PERSONEL.Entity;
			}
			set
			{
				PERSONEL previousValue = this._PERSONEL.Entity;
				if (((previousValue != value) 
							|| (this._PERSONEL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PERSONEL.Entity = null;
						previousValue.REQUESTs.Remove(this);
					}
					this._PERSONEL.Entity = value;
					if ((value != null))
					{
						value.REQUESTs.Add(this);
						this._id_pers = value.id_pers;
					}
					else
					{
						this._id_pers = default(int);
					}
					this.SendPropertyChanged("PERSONEL");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ACTIVITies(ACTIVITY entity)
		{
			this.SendPropertyChanging();
			entity.REQUEST = this;
		}
		
		private void detach_ACTIVITies(ACTIVITY entity)
		{
			this.SendPropertyChanging();
			entity.REQUEST = null;
		}
	}
}
#pragma warning restore 1591
