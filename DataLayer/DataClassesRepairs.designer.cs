#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataLayer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="RepairServicesDB")]
	public partial class DataClassesRepairsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertActDict(ActDict instance);
    partial void UpdateActDict(ActDict instance);
    partial void DeleteActDict(ActDict instance);
    partial void InsertActivity(Activity instance);
    partial void UpdateActivity(Activity instance);
    partial void DeleteActivity(Activity instance);
    partial void InsertClient(Client instance);
    partial void UpdateClient(Client instance);
    partial void DeleteClient(Client instance);
    partial void InsertObject(Object instance);
    partial void UpdateObject(Object instance);
    partial void DeleteObject(Object instance);
    partial void InsertObjType(ObjType instance);
    partial void UpdateObjType(ObjType instance);
    partial void DeleteObjType(ObjType instance);
    partial void InsertPersonel(Personel instance);
    partial void UpdatePersonel(Personel instance);
    partial void DeletePersonel(Personel instance);
    partial void InsertRequest(Request instance);
    partial void UpdateRequest(Request instance);
    partial void DeleteRequest(Request instance);
    partial void InsertRoleDict(RoleDict instance);
    partial void UpdateRoleDict(RoleDict instance);
    partial void DeleteRoleDict(RoleDict instance);
    #endregion
		
		public DataClassesRepairsDataContext() : 
				base(global::DataLayer.Properties.Settings.Default.RepairServicesDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesRepairsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesRepairsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesRepairsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesRepairsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ActDict> ActDicts
		{
			get
			{
				return this.GetTable<ActDict>();
			}
		}
		
		public System.Data.Linq.Table<Activity> Activities
		{
			get
			{
				return this.GetTable<Activity>();
			}
		}
		
		public System.Data.Linq.Table<Client> Clients
		{
			get
			{
				return this.GetTable<Client>();
			}
		}
		
		public System.Data.Linq.Table<Object> Objects
		{
			get
			{
				return this.GetTable<Object>();
			}
		}
		
		public System.Data.Linq.Table<ObjType> ObjTypes
		{
			get
			{
				return this.GetTable<ObjType>();
			}
		}
		
		public System.Data.Linq.Table<Personel> Personels
		{
			get
			{
				return this.GetTable<Personel>();
			}
		}
		
		public System.Data.Linq.Table<Request> Requests
		{
			get
			{
				return this.GetTable<Request>();
			}
		}
		
		public System.Data.Linq.Table<RoleDict> RoleDicts
		{
			get
			{
				return this.GetTable<RoleDict>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActDict")]
	public partial class ActDict : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _act_type;
		
		private string _act_name;
		
		private EntitySet<Activity> _Activities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onact_typeChanging(int value);
    partial void Onact_typeChanged();
    partial void Onact_nameChanging(string value);
    partial void Onact_nameChanged();
    #endregion
		
		public ActDict()
		{
			this._Activities = new EntitySet<Activity>(new Action<Activity>(this.attach_Activities), new Action<Activity>(this.detach_Activities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_act_type", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int act_type
		{
			get
			{
				return this._act_type;
			}
			set
			{
				if ((this._act_type != value))
				{
					this.Onact_typeChanging(value);
					this.SendPropertyChanging();
					this._act_type = value;
					this.SendPropertyChanged("act_type");
					this.Onact_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_act_name", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string act_name
		{
			get
			{
				return this._act_name;
			}
			set
			{
				if ((this._act_name != value))
				{
					this.Onact_nameChanging(value);
					this.SendPropertyChanging();
					this._act_name = value;
					this.SendPropertyChanged("act_name");
					this.Onact_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActDict_Activity", Storage="_Activities", ThisKey="act_type", OtherKey="act_type")]
		public EntitySet<Activity> Activities
		{
			get
			{
				return this._Activities;
			}
			set
			{
				this._Activities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.ActDict = this;
		}
		
		private void detach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.ActDict = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Activity")]
	public partial class Activity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_act;
		
		private int _id_req;
		
		private int _act_type;
		
		private int _id_pers;
		
		private int _seq_no;
		
		private string _descr;
		
		private string _result;
		
		private string _status;
		
		private string _alt_req;
		
		private string _alt_fin_cancel;
		
		private EntityRef<ActDict> _ActDict;
		
		private EntityRef<Personel> _Personel;
		
		private EntityRef<Request> _Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_actChanging(int value);
    partial void Onid_actChanged();
    partial void Onid_reqChanging(int value);
    partial void Onid_reqChanged();
    partial void Onact_typeChanging(int value);
    partial void Onact_typeChanged();
    partial void Onid_persChanging(int value);
    partial void Onid_persChanged();
    partial void Onseq_noChanging(int value);
    partial void Onseq_noChanged();
    partial void OndescrChanging(string value);
    partial void OndescrChanged();
    partial void OnresultChanging(string value);
    partial void OnresultChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void Onalt_reqChanging(string value);
    partial void Onalt_reqChanged();
    partial void Onalt_fin_cancelChanging(string value);
    partial void Onalt_fin_cancelChanged();
    #endregion
		
		public Activity()
		{
			this._ActDict = default(EntityRef<ActDict>);
			this._Personel = default(EntityRef<Personel>);
			this._Request = default(EntityRef<Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_act", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_act
		{
			get
			{
				return this._id_act;
			}
			set
			{
				if ((this._id_act != value))
				{
					this.Onid_actChanging(value);
					this.SendPropertyChanging();
					this._id_act = value;
					this.SendPropertyChanged("id_act");
					this.Onid_actChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_req", DbType="Int NOT NULL")]
		public int id_req
		{
			get
			{
				return this._id_req;
			}
			set
			{
				if ((this._id_req != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_reqChanging(value);
					this.SendPropertyChanging();
					this._id_req = value;
					this.SendPropertyChanged("id_req");
					this.Onid_reqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_act_type", DbType="Int NOT NULL")]
		public int act_type
		{
			get
			{
				return this._act_type;
			}
			set
			{
				if ((this._act_type != value))
				{
					if (this._ActDict.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onact_typeChanging(value);
					this.SendPropertyChanging();
					this._act_type = value;
					this.SendPropertyChanged("act_type");
					this.Onact_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_pers", DbType="Int NOT NULL")]
		public int id_pers
		{
			get
			{
				return this._id_pers;
			}
			set
			{
				if ((this._id_pers != value))
				{
					if (this._Personel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_persChanging(value);
					this.SendPropertyChanging();
					this._id_pers = value;
					this.SendPropertyChanged("id_pers");
					this.Onid_persChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seq_no", DbType="Int NOT NULL")]
		public int seq_no
		{
			get
			{
				return this._seq_no;
			}
			set
			{
				if ((this._seq_no != value))
				{
					this.Onseq_noChanging(value);
					this.SendPropertyChanging();
					this._seq_no = value;
					this.SendPropertyChanged("seq_no");
					this.Onseq_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descr", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string descr
		{
			get
			{
				return this._descr;
			}
			set
			{
				if ((this._descr != value))
				{
					this.OndescrChanging(value);
					this.SendPropertyChanging();
					this._descr = value;
					this.SendPropertyChanged("descr");
					this.OndescrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_result", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string result
		{
			get
			{
				return this._result;
			}
			set
			{
				if ((this._result != value))
				{
					this.OnresultChanging(value);
					this.SendPropertyChanging();
					this._result = value;
					this.SendPropertyChanged("result");
					this.OnresultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_alt_req", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string alt_req
		{
			get
			{
				return this._alt_req;
			}
			set
			{
				if ((this._alt_req != value))
				{
					this.Onalt_reqChanging(value);
					this.SendPropertyChanging();
					this._alt_req = value;
					this.SendPropertyChanged("alt_req");
					this.Onalt_reqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_alt_fin_cancel", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string alt_fin_cancel
		{
			get
			{
				return this._alt_fin_cancel;
			}
			set
			{
				if ((this._alt_fin_cancel != value))
				{
					this.Onalt_fin_cancelChanging(value);
					this.SendPropertyChanging();
					this._alt_fin_cancel = value;
					this.SendPropertyChanged("alt_fin_cancel");
					this.Onalt_fin_cancelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActDict_Activity", Storage="_ActDict", ThisKey="act_type", OtherKey="act_type", IsForeignKey=true)]
		public ActDict ActDict
		{
			get
			{
				return this._ActDict.Entity;
			}
			set
			{
				ActDict previousValue = this._ActDict.Entity;
				if (((previousValue != value) 
							|| (this._ActDict.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActDict.Entity = null;
						previousValue.Activities.Remove(this);
					}
					this._ActDict.Entity = value;
					if ((value != null))
					{
						value.Activities.Add(this);
						this._act_type = value.act_type;
					}
					else
					{
						this._act_type = default(int);
					}
					this.SendPropertyChanged("ActDict");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personel_Activity", Storage="_Personel", ThisKey="id_pers", OtherKey="id_pers", IsForeignKey=true)]
		public Personel Personel
		{
			get
			{
				return this._Personel.Entity;
			}
			set
			{
				Personel previousValue = this._Personel.Entity;
				if (((previousValue != value) 
							|| (this._Personel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personel.Entity = null;
						previousValue.Activities.Remove(this);
					}
					this._Personel.Entity = value;
					if ((value != null))
					{
						value.Activities.Add(this);
						this._id_pers = value.id_pers;
					}
					else
					{
						this._id_pers = default(int);
					}
					this.SendPropertyChanged("Personel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_Activity", Storage="_Request", ThisKey="id_req", OtherKey="id_req", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.Activities.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.Activities.Add(this);
						this._id_req = value.id_req;
					}
					else
					{
						this._id_req = default(int);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Client")]
	public partial class Client : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_cli;
		
		private string _name;
		
		private string _fname;
		
		private string _lname;
		
		private string _telephone;
		
		private EntitySet<Object> _Objects;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_cliChanging(int value);
    partial void Onid_cliChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnfnameChanging(string value);
    partial void OnfnameChanged();
    partial void OnlnameChanging(string value);
    partial void OnlnameChanged();
    partial void OntelephoneChanging(string value);
    partial void OntelephoneChanged();
    #endregion
		
		public Client()
		{
			this._Objects = new EntitySet<Object>(new Action<Object>(this.attach_Objects), new Action<Object>(this.detach_Objects));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_cli", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_cli
		{
			get
			{
				return this._id_cli;
			}
			set
			{
				if ((this._id_cli != value))
				{
					this.Onid_cliChanging(value);
					this.SendPropertyChanging();
					this._id_cli = value;
					this.SendPropertyChanged("id_cli");
					this.Onid_cliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fname", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string fname
		{
			get
			{
				return this._fname;
			}
			set
			{
				if ((this._fname != value))
				{
					this.OnfnameChanging(value);
					this.SendPropertyChanging();
					this._fname = value;
					this.SendPropertyChanged("fname");
					this.OnfnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lname", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string lname
		{
			get
			{
				return this._lname;
			}
			set
			{
				if ((this._lname != value))
				{
					this.OnlnameChanging(value);
					this.SendPropertyChanging();
					this._lname = value;
					this.SendPropertyChanged("lname");
					this.OnlnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telephone", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string telephone
		{
			get
			{
				return this._telephone;
			}
			set
			{
				if ((this._telephone != value))
				{
					this.OntelephoneChanging(value);
					this.SendPropertyChanging();
					this._telephone = value;
					this.SendPropertyChanged("telephone");
					this.OntelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Object", Storage="_Objects", ThisKey="id_cli", OtherKey="id_cli")]
		public EntitySet<Object> Objects
		{
			get
			{
				return this._Objects;
			}
			set
			{
				this._Objects.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Objects(Object entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_Objects(Object entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Object")]
	public partial class Object : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _nr_obj;
		
		private string _name;
		
		private int _id_cli;
		
		private int _code_type;
		
		private EntitySet<Request> _Requests;
		
		private EntityRef<Client> _Client;
		
		private EntityRef<ObjType> _ObjType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onnr_objChanging(int value);
    partial void Onnr_objChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onid_cliChanging(int value);
    partial void Onid_cliChanged();
    partial void Oncode_typeChanging(int value);
    partial void Oncode_typeChanged();
    #endregion
		
		public Object()
		{
			this._Requests = new EntitySet<Request>(new Action<Request>(this.attach_Requests), new Action<Request>(this.detach_Requests));
			this._Client = default(EntityRef<Client>);
			this._ObjType = default(EntityRef<ObjType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nr_obj", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int nr_obj
		{
			get
			{
				return this._nr_obj;
			}
			set
			{
				if ((this._nr_obj != value))
				{
					this.Onnr_objChanging(value);
					this.SendPropertyChanging();
					this._nr_obj = value;
					this.SendPropertyChanged("nr_obj");
					this.Onnr_objChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_cli", DbType="Int NOT NULL")]
		public int id_cli
		{
			get
			{
				return this._id_cli;
			}
			set
			{
				if ((this._id_cli != value))
				{
					if (this._Client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_cliChanging(value);
					this.SendPropertyChanging();
					this._id_cli = value;
					this.SendPropertyChanged("id_cli");
					this.Onid_cliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code_type", DbType="Int NOT NULL")]
		public int code_type
		{
			get
			{
				return this._code_type;
			}
			set
			{
				if ((this._code_type != value))
				{
					if (this._ObjType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncode_typeChanging(value);
					this.SendPropertyChanging();
					this._code_type = value;
					this.SendPropertyChanged("code_type");
					this.Oncode_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_Request", Storage="_Requests", ThisKey="nr_obj", OtherKey="nr_obj")]
		public EntitySet<Request> Requests
		{
			get
			{
				return this._Requests;
			}
			set
			{
				this._Requests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Object", Storage="_Client", ThisKey="id_cli", OtherKey="id_cli", IsForeignKey=true)]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.Objects.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.Objects.Add(this);
						this._id_cli = value.id_cli;
					}
					else
					{
						this._id_cli = default(int);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ObjType_Object", Storage="_ObjType", ThisKey="code_type", OtherKey="code_type", IsForeignKey=true)]
		public ObjType ObjType
		{
			get
			{
				return this._ObjType.Entity;
			}
			set
			{
				ObjType previousValue = this._ObjType.Entity;
				if (((previousValue != value) 
							|| (this._ObjType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ObjType.Entity = null;
						previousValue.Objects.Remove(this);
					}
					this._ObjType.Entity = value;
					if ((value != null))
					{
						value.Objects.Add(this);
						this._code_type = value.code_type;
					}
					else
					{
						this._code_type = default(int);
					}
					this.SendPropertyChanged("ObjType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Requests(Request entity)
		{
			this.SendPropertyChanging();
			entity.Object = this;
		}
		
		private void detach_Requests(Request entity)
		{
			this.SendPropertyChanging();
			entity.Object = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ObjType")]
	public partial class ObjType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _code_type;
		
		private string _name_type;
		
		private EntitySet<Object> _Objects;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncode_typeChanging(int value);
    partial void Oncode_typeChanged();
    partial void Onname_typeChanging(string value);
    partial void Onname_typeChanged();
    #endregion
		
		public ObjType()
		{
			this._Objects = new EntitySet<Object>(new Action<Object>(this.attach_Objects), new Action<Object>(this.detach_Objects));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code_type", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int code_type
		{
			get
			{
				return this._code_type;
			}
			set
			{
				if ((this._code_type != value))
				{
					this.Oncode_typeChanging(value);
					this.SendPropertyChanging();
					this._code_type = value;
					this.SendPropertyChanged("code_type");
					this.Oncode_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name_type
		{
			get
			{
				return this._name_type;
			}
			set
			{
				if ((this._name_type != value))
				{
					this.Onname_typeChanging(value);
					this.SendPropertyChanging();
					this._name_type = value;
					this.SendPropertyChanged("name_type");
					this.Onname_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ObjType_Object", Storage="_Objects", ThisKey="code_type", OtherKey="code_type")]
		public EntitySet<Object> Objects
		{
			get
			{
				return this._Objects;
			}
			set
			{
				this._Objects.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Objects(Object entity)
		{
			this.SendPropertyChanging();
			entity.ObjType = this;
		}
		
		private void detach_Objects(Object entity)
		{
			this.SendPropertyChanging();
			entity.ObjType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Personel")]
	public partial class Personel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_pers;
		
		private int _id_role;
		
		private string _fname;
		
		private string _lname;
		
		private string _login;
		
		private string _password_hash;
		
		private EntitySet<Activity> _Activities;
		
		private EntitySet<Request> _Requests;
		
		private EntityRef<RoleDict> _RoleDict;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_persChanging(int value);
    partial void Onid_persChanged();
    partial void Onid_roleChanging(int value);
    partial void Onid_roleChanged();
    partial void OnfnameChanging(string value);
    partial void OnfnameChanged();
    partial void OnlnameChanging(string value);
    partial void OnlnameChanged();
    partial void OnloginChanging(string value);
    partial void OnloginChanged();
    partial void Onpassword_hashChanging(string value);
    partial void Onpassword_hashChanged();
    #endregion
		
		public Personel()
		{
			this._Activities = new EntitySet<Activity>(new Action<Activity>(this.attach_Activities), new Action<Activity>(this.detach_Activities));
			this._Requests = new EntitySet<Request>(new Action<Request>(this.attach_Requests), new Action<Request>(this.detach_Requests));
			this._RoleDict = default(EntityRef<RoleDict>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_pers", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_pers
		{
			get
			{
				return this._id_pers;
			}
			set
			{
				if ((this._id_pers != value))
				{
					this.Onid_persChanging(value);
					this.SendPropertyChanging();
					this._id_pers = value;
					this.SendPropertyChanged("id_pers");
					this.Onid_persChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_role", DbType="Int NOT NULL")]
		public int id_role
		{
			get
			{
				return this._id_role;
			}
			set
			{
				if ((this._id_role != value))
				{
					if (this._RoleDict.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_roleChanging(value);
					this.SendPropertyChanging();
					this._id_role = value;
					this.SendPropertyChanged("id_role");
					this.Onid_roleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string fname
		{
			get
			{
				return this._fname;
			}
			set
			{
				if ((this._fname != value))
				{
					this.OnfnameChanging(value);
					this.SendPropertyChanging();
					this._fname = value;
					this.SendPropertyChanged("fname");
					this.OnfnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string lname
		{
			get
			{
				return this._lname;
			}
			set
			{
				if ((this._lname != value))
				{
					this.OnlnameChanging(value);
					this.SendPropertyChanging();
					this._lname = value;
					this.SendPropertyChanged("lname");
					this.OnlnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string login
		{
			get
			{
				return this._login;
			}
			set
			{
				if ((this._login != value))
				{
					this.OnloginChanging(value);
					this.SendPropertyChanging();
					this._login = value;
					this.SendPropertyChanged("login");
					this.OnloginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password_hash", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string password_hash
		{
			get
			{
				return this._password_hash;
			}
			set
			{
				if ((this._password_hash != value))
				{
					this.Onpassword_hashChanging(value);
					this.SendPropertyChanging();
					this._password_hash = value;
					this.SendPropertyChanged("password_hash");
					this.Onpassword_hashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personel_Activity", Storage="_Activities", ThisKey="id_pers", OtherKey="id_pers")]
		public EntitySet<Activity> Activities
		{
			get
			{
				return this._Activities;
			}
			set
			{
				this._Activities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personel_Request", Storage="_Requests", ThisKey="id_pers", OtherKey="id_pers")]
		public EntitySet<Request> Requests
		{
			get
			{
				return this._Requests;
			}
			set
			{
				this._Requests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoleDict_Personel", Storage="_RoleDict", ThisKey="id_role", OtherKey="id_role", IsForeignKey=true)]
		public RoleDict RoleDict
		{
			get
			{
				return this._RoleDict.Entity;
			}
			set
			{
				RoleDict previousValue = this._RoleDict.Entity;
				if (((previousValue != value) 
							|| (this._RoleDict.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RoleDict.Entity = null;
						previousValue.Personels.Remove(this);
					}
					this._RoleDict.Entity = value;
					if ((value != null))
					{
						value.Personels.Add(this);
						this._id_role = value.id_role;
					}
					else
					{
						this._id_role = default(int);
					}
					this.SendPropertyChanged("RoleDict");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.Personel = this;
		}
		
		private void detach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.Personel = null;
		}
		
		private void attach_Requests(Request entity)
		{
			this.SendPropertyChanging();
			entity.Personel = this;
		}
		
		private void detach_Requests(Request entity)
		{
			this.SendPropertyChanging();
			entity.Personel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Request")]
	public partial class Request : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_req;
		
		private int _nr_obj;
		
		private int _id_pers;
		
		private string _descr;
		
		private string _result;
		
		private string _status;
		
		private string _alt_req;
		
		private string _alt_fin_cancel;
		
		private EntitySet<Activity> _Activities;
		
		private EntityRef<Object> _Object;
		
		private EntityRef<Personel> _Personel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_reqChanging(int value);
    partial void Onid_reqChanged();
    partial void Onnr_objChanging(int value);
    partial void Onnr_objChanged();
    partial void Onid_persChanging(int value);
    partial void Onid_persChanged();
    partial void OndescrChanging(string value);
    partial void OndescrChanged();
    partial void OnresultChanging(string value);
    partial void OnresultChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void Onalt_reqChanging(string value);
    partial void Onalt_reqChanged();
    partial void Onalt_fin_cancelChanging(string value);
    partial void Onalt_fin_cancelChanged();
    #endregion
		
		public Request()
		{
			this._Activities = new EntitySet<Activity>(new Action<Activity>(this.attach_Activities), new Action<Activity>(this.detach_Activities));
			this._Object = default(EntityRef<Object>);
			this._Personel = default(EntityRef<Personel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_req", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_req
		{
			get
			{
				return this._id_req;
			}
			set
			{
				if ((this._id_req != value))
				{
					this.Onid_reqChanging(value);
					this.SendPropertyChanging();
					this._id_req = value;
					this.SendPropertyChanged("id_req");
					this.Onid_reqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nr_obj", DbType="Int NOT NULL")]
		public int nr_obj
		{
			get
			{
				return this._nr_obj;
			}
			set
			{
				if ((this._nr_obj != value))
				{
					if (this._Object.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onnr_objChanging(value);
					this.SendPropertyChanging();
					this._nr_obj = value;
					this.SendPropertyChanged("nr_obj");
					this.Onnr_objChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_pers", DbType="Int NOT NULL")]
		public int id_pers
		{
			get
			{
				return this._id_pers;
			}
			set
			{
				if ((this._id_pers != value))
				{
					if (this._Personel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_persChanging(value);
					this.SendPropertyChanging();
					this._id_pers = value;
					this.SendPropertyChanged("id_pers");
					this.Onid_persChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descr", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string descr
		{
			get
			{
				return this._descr;
			}
			set
			{
				if ((this._descr != value))
				{
					this.OndescrChanging(value);
					this.SendPropertyChanging();
					this._descr = value;
					this.SendPropertyChanged("descr");
					this.OndescrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_result", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string result
		{
			get
			{
				return this._result;
			}
			set
			{
				if ((this._result != value))
				{
					this.OnresultChanging(value);
					this.SendPropertyChanging();
					this._result = value;
					this.SendPropertyChanged("result");
					this.OnresultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_alt_req", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string alt_req
		{
			get
			{
				return this._alt_req;
			}
			set
			{
				if ((this._alt_req != value))
				{
					this.Onalt_reqChanging(value);
					this.SendPropertyChanging();
					this._alt_req = value;
					this.SendPropertyChanged("alt_req");
					this.Onalt_reqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_alt_fin_cancel", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string alt_fin_cancel
		{
			get
			{
				return this._alt_fin_cancel;
			}
			set
			{
				if ((this._alt_fin_cancel != value))
				{
					this.Onalt_fin_cancelChanging(value);
					this.SendPropertyChanging();
					this._alt_fin_cancel = value;
					this.SendPropertyChanged("alt_fin_cancel");
					this.Onalt_fin_cancelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_Activity", Storage="_Activities", ThisKey="id_req", OtherKey="id_req")]
		public EntitySet<Activity> Activities
		{
			get
			{
				return this._Activities;
			}
			set
			{
				this._Activities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_Request", Storage="_Object", ThisKey="nr_obj", OtherKey="nr_obj", IsForeignKey=true)]
		public Object Object
		{
			get
			{
				return this._Object.Entity;
			}
			set
			{
				Object previousValue = this._Object.Entity;
				if (((previousValue != value) 
							|| (this._Object.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Object.Entity = null;
						previousValue.Requests.Remove(this);
					}
					this._Object.Entity = value;
					if ((value != null))
					{
						value.Requests.Add(this);
						this._nr_obj = value.nr_obj;
					}
					else
					{
						this._nr_obj = default(int);
					}
					this.SendPropertyChanged("Object");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personel_Request", Storage="_Personel", ThisKey="id_pers", OtherKey="id_pers", IsForeignKey=true)]
		public Personel Personel
		{
			get
			{
				return this._Personel.Entity;
			}
			set
			{
				Personel previousValue = this._Personel.Entity;
				if (((previousValue != value) 
							|| (this._Personel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personel.Entity = null;
						previousValue.Requests.Remove(this);
					}
					this._Personel.Entity = value;
					if ((value != null))
					{
						value.Requests.Add(this);
						this._id_pers = value.id_pers;
					}
					else
					{
						this._id_pers = default(int);
					}
					this.SendPropertyChanged("Personel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		
		private void detach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoleDict")]
	public partial class RoleDict : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_role;
		
		private string _name;
		
		private EntitySet<Personel> _Personels;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_roleChanging(int value);
    partial void Onid_roleChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public RoleDict()
		{
			this._Personels = new EntitySet<Personel>(new Action<Personel>(this.attach_Personels), new Action<Personel>(this.detach_Personels));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_role", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_role
		{
			get
			{
				return this._id_role;
			}
			set
			{
				if ((this._id_role != value))
				{
					this.Onid_roleChanging(value);
					this.SendPropertyChanging();
					this._id_role = value;
					this.SendPropertyChanged("id_role");
					this.Onid_roleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoleDict_Personel", Storage="_Personels", ThisKey="id_role", OtherKey="id_role")]
		public EntitySet<Personel> Personels
		{
			get
			{
				return this._Personels;
			}
			set
			{
				this._Personels.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Personels(Personel entity)
		{
			this.SendPropertyChanging();
			entity.RoleDict = this;
		}
		
		private void detach_Personels(Personel entity)
		{
			this.SendPropertyChanging();
			entity.RoleDict = null;
		}
	}
}
#pragma warning restore 1591
